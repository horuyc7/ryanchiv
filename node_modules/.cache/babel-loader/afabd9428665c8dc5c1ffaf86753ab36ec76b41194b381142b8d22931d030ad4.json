{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Horuy\\\\Desktop\\\\js\\\\ryanchiv\\\\src\\\\component\\\\Manga.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport \"./Manga.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Manga = () => {\n  _s();\n  const [mangaData, setMangaData] = useState({\n    currently: [],\n    completed: []\n  });\n  const [activeSection, setActiveSection] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (activeSection !== '') {\n      const fetchData = async () => {\n        try {\n          const response = await axios.get(`/api/manga${activeSection.charAt(0).toUpperCase() + activeSection.slice(1)}Scraping`);\n          setMangaData({\n            ...mangaData,\n            [activeSection]: response.data\n          });\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n    }\n  }, [activeSection]);\n  const handleSectionClick = section => {\n    setActiveSection(section);\n  };\n  const observer = useRef(null);\n  useEffect(() => {\n    if (!loading) {\n      observer.current = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const lazyImage = entry.target;\n            lazyImage.src = lazyImage.dataset.src;\n            observer.current.unobserve(lazyImage);\n          }\n        });\n      });\n\n      // Start observing each lazy-load image\n      document.querySelectorAll('.lazy-load').forEach(img => {\n        observer.current.observe(img);\n      });\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleSectionClick('currently'),\n        className: activeSection === 'currently' ? 'active' : '',\n        children: \"Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleSectionClick('completed'),\n        className: activeSection === 'completed' ? 'active' : '',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manga-container\",\n      children: [activeSection === 'currently' && mangaData.currently.map((manga, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manga\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://myanimelist.net${manga.title}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: manga.imageUrl // Lazy load image\n            ,\n            alt: manga.title,\n            className: \"lazy-load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)), activeSection === 'completed' && mangaData.completed.map((manga, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manga\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://myanimelist.net${manga.title}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: manga.imageUrl // Lazy load image\n            ,\n            alt: manga.title,\n            className: \"lazy-load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '5px',\n            textAlign: 'center'\n          },\n          children: [\" \\u2606 \", manga.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Manga, \"EtxGWhYMWhnQZEQANE8KOPWNEE4=\");\n_c = Manga;\nexport default Manga;\nvar _c;\n$RefreshReg$(_c, \"Manga\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Manga","_s","mangaData","setMangaData","currently","completed","activeSection","setActiveSection","loading","setLoading","fetchData","response","get","charAt","toUpperCase","slice","data","error","console","handleSectionClick","section","observer","current","IntersectionObserver","entries","forEach","entry","isIntersecting","lazyImage","target","src","dataset","unobserve","document","querySelectorAll","img","observe","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","manga","index","href","title","rel","imageUrl","alt","style","marginTop","textAlign","rating","_c","$RefreshReg$"],"sources":["C:/Users/Horuy/Desktop/js/ryanchiv/src/component/Manga.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport \"./Manga.css\";\r\n\r\nconst Manga = () => {\r\n\r\n    \r\n\r\n    const [mangaData, setMangaData] = useState({ currently: [], completed: [] });\r\n    const [activeSection, setActiveSection] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeSection !== '') {\r\n\r\n            const fetchData = async () => {\r\n                try {\r\n                    const response = await axios.get(`/api/manga${activeSection.charAt(0).toUpperCase() + activeSection.slice(1)}Scraping`);\r\n                    setMangaData({ ...mangaData, [activeSection]: response.data });\r\n                } catch (error) {\r\n                    console.error('Error fetching data:', error);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            };\r\n\r\n            fetchData();\r\n        }\r\n\r\n    }, [activeSection]);\r\n\r\n  const handleSectionClick = (section) => {\r\n    setActiveSection(section);\r\n    };\r\n\r\n\r\n    const observer = useRef(null);\r\n  useEffect(() => {\r\n    if (!loading) {\r\n        observer.current = new IntersectionObserver((entries) => {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    const lazyImage = entry.target;\r\n                    lazyImage.src = lazyImage.dataset.src;\r\n                    observer.current.unobserve(lazyImage);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Start observing each lazy-load image\r\n        document.querySelectorAll('.lazy-load').forEach((img) => {\r\n            observer.current.observe(img);\r\n        });\r\n    }\r\n}, [loading]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"section-container\">\r\n                <p onClick={() => handleSectionClick('currently')} className={activeSection === 'currently' ? 'active' : ''}>Currently Reading</p>\r\n                <p onClick={() => handleSectionClick('completed')} className={activeSection === 'completed' ? 'active' : ''}>Completed</p>\r\n            </div>\r\n\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <div className=\"manga-container\">\r\n                    {activeSection === 'currently' && mangaData.currently.map((manga, index) => (\r\n                        <div key={index} className=\"manga\">\r\n                            <a href={`https://myanimelist.net${manga.title}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <img\r\n                                                src={manga.imageUrl} // Lazy load image\r\n                                                alt={manga.title}\r\n                                                className=\"lazy-load\"\r\n                                            />\r\n                            </a>\r\n                        </div>\r\n                    ))}\r\n                    {activeSection === 'completed' && mangaData.completed.map((manga, index) => (\r\n                        <div key={index} className=\"manga\">\r\n                            <a href={`https://myanimelist.net${manga.title}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <img\r\n                                                src={manga.imageUrl} // Lazy load image\r\n                                                alt={manga.title}\r\n                                                className=\"lazy-load\"\r\n                                            />\r\n                            </a>\r\n                            <p style={{ marginTop: '5px', textAlign: 'center' }}> ☆ {manga.rating}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Manga;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}