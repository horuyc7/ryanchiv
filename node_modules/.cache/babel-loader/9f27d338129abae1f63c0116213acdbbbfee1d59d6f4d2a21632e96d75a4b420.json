{"ast":null,"code":"var _jsxFileName = \"/Users/horuy/Desktop/js/site/src/component/Spotify.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n/*\nconst clientID = '6198fcf6f4eb4eda9e9bca8527177fd4';\nconst clientSecret = '5f3e5221e42d4ca695c2c1be5910747f';\nlet accessToken = ''; // Store the access token globally\n\nasync function getAccessToken() {\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientID}:${clientSecret}`)}`\n    },\n    body: 'grant_type=client_credentials&scope=user-top-read'\n  });\n  const data = await response.json();\n  accessToken = data.access_token; // Update the global access token\n  setTimeout(getAccessToken, 3600000); // Refresh token after one hour (3600000 milliseconds)\n}\n\nasync function fetchWebApi(endpoint, method, body) {\n  //if (!accessToken) await getAccessToken();\n\n  //console.log(accessToken);\n\n  const res = await fetch(`https://api.spotify.com/${endpoint}`, {\n    headers: {\n      Authorization: `Bearer BQCY78x1w61LdiXUa9RnLwGj3KeAFWQXKJEhqbQO0y1aIBb7iDqAoK_gG1uhbaBXJ1yK39XNbvBelEWfZBnXysPkxxHogSyJrUUo3r8EXd3Ys54rZq8b8wAOdgc`,\n    },\n    method,\n    body: JSON.stringify(body)\n  });\n  return await res.json();\n}\n\nasync function getTopTracks() {\n    try {\n      const response = await fetchWebApi(\n        'v1/me/top/tracks?time_range=long_term&limit=5', 'GET'\n      );\n\n      return response.items || []; // Return an empty array if items is undefined\n    } catch (error) {\n      console.error('Error fetching top tracks:', error);\n      return []; // Return an empty array in case of an error\n    }\n  }\n\nexport default function Spotify() {\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchAndDisplayTopTracks() {\n      const topTracks = await getTopTracks();\n      setTracks(topTracks);\n      setLoading(false);\n    \n    }\n\n    fetchAndDisplayTopTracks();\n  }, []);\n\n  return (\n    <div>\n      <h2>Top 5 Tracks</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"songs-container\">\n          {tracks.map((track, index) => (\n            <li key={index}>{track.name} by {track.artists.map(artist => artist.name).join(', ')}</li>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientID = '6198fcf6f4eb4eda9e9bca8527177fd4';\nconst clientSecret = '5f3e5221e42d4ca695c2c1be5910747f';\nasync function getAccessToken() {\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientID}:${clientSecret}`)}`\n    },\n    body: 'grant_type=client_credentials'\n  });\n  const data = await response.json();\n  return data.access_token;\n}\nasync function fetchTopTracks(accessToken) {\n  try {\n    const response = await fetch('https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=5', {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    const data = await response.json();\n    return data.items;\n  } catch (error) {\n    console.error('Error fetching top tracks:', error);\n    return [];\n  }\n}\nexport default function Spotify() {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const accessToken = await getAccessToken();\n        const topTracks = await fetchTopTracks(accessToken);\n        console.log(accessToken);\n        console.log(topTracks);\n        setTracks(topTracks);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top 5 Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: track.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 7\n  }, this);\n}\n_s(Spotify, \"Sz6ZEYKd1VIdaFUNb3WwrvXH+L8=\");\n_c = Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","clientID","clientSecret","getAccessToken","response","fetch","method","headers","btoa","body","data","json","access_token","fetchTopTracks","accessToken","items","error","console","Spotify","_s","tracks","setTracks","loading","setLoading","fetchData","topTracks","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","track","index","name","_c","$RefreshReg$"],"sources":["/Users/horuy/Desktop/js/site/src/component/Spotify.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n/*\nconst clientID = '6198fcf6f4eb4eda9e9bca8527177fd4';\nconst clientSecret = '5f3e5221e42d4ca695c2c1be5910747f';\nlet accessToken = ''; // Store the access token globally\n\nasync function getAccessToken() {\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientID}:${clientSecret}`)}`\n    },\n    body: 'grant_type=client_credentials&scope=user-top-read'\n  });\n  const data = await response.json();\n  accessToken = data.access_token; // Update the global access token\n  setTimeout(getAccessToken, 3600000); // Refresh token after one hour (3600000 milliseconds)\n}\n\nasync function fetchWebApi(endpoint, method, body) {\n  //if (!accessToken) await getAccessToken();\n\n  //console.log(accessToken);\n\n  const res = await fetch(`https://api.spotify.com/${endpoint}`, {\n    headers: {\n      Authorization: `Bearer BQCY78x1w61LdiXUa9RnLwGj3KeAFWQXKJEhqbQO0y1aIBb7iDqAoK_gG1uhbaBXJ1yK39XNbvBelEWfZBnXysPkxxHogSyJrUUo3r8EXd3Ys54rZq8b8wAOdgc`,\n    },\n    method,\n    body: JSON.stringify(body)\n  });\n  return await res.json();\n}\n\nasync function getTopTracks() {\n    try {\n      const response = await fetchWebApi(\n        'v1/me/top/tracks?time_range=long_term&limit=5', 'GET'\n      );\n\n      return response.items || []; // Return an empty array if items is undefined\n    } catch (error) {\n      console.error('Error fetching top tracks:', error);\n      return []; // Return an empty array in case of an error\n    }\n  }\n\nexport default function Spotify() {\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchAndDisplayTopTracks() {\n      const topTracks = await getTopTracks();\n      setTracks(topTracks);\n      setLoading(false);\n    \n    }\n\n    fetchAndDisplayTopTracks();\n  }, []);\n\n  return (\n    <div>\n      <h2>Top 5 Tracks</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"songs-container\">\n          {tracks.map((track, index) => (\n            <li key={index}>{track.name} by {track.artists.map(artist => artist.name).join(', ')}</li>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n */\n\n\nconst clientID = '6198fcf6f4eb4eda9e9bca8527177fd4';\nconst clientSecret = '5f3e5221e42d4ca695c2c1be5910747f';\n\nasync function getAccessToken() {\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientID}:${clientSecret}`)}`\n    },\n    body: 'grant_type=client_credentials'\n  });\n  const data = await response.json();\n  return data.access_token;\n}\n\nasync function fetchTopTracks(accessToken) {\n    try {\n      const response = await fetch('https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=5', {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      return data.items;\n    } catch (error) {\n      console.error('Error fetching top tracks:', error);\n      return [];\n    }\n  }\n\n\n  export default function Spotify() {\n    const [tracks, setTracks] = useState([]);\n    const [loading, setLoading] = useState(true);\n  \n    useEffect(() => {\n      async function fetchData() {\n        try {\n          const accessToken = await getAccessToken();\n          const topTracks = await fetchTopTracks(accessToken);\n\n          console.log(accessToken);\n          console.log(topTracks);\n\n          setTracks(topTracks);\n          setLoading(false);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n          setLoading(false);\n        }\n      }\n  \n      fetchData();\n    }, []);\n  \n    return (\n      <div>\n        <h2>Top 5 Tracks</h2>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <ul>\n            {tracks.map((track, index) => (\n              <li key={index}>{track.name}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}