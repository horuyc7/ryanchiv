{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Horuy\\\\Desktop\\\\js\\\\ryanchiv\\\\src\\\\component\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './Movies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [listDetails, setListDetails] = useState({});\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/movieScraping');\n        const {\n          listDetails,\n          moviesData\n        } = response.data;\n        setListDetails(listDetails);\n        setMovies(moviesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // Update loading status once data fetching is complete\n      }\n    };\n    fetchData();\n  }, []);\n  const observer = useRef(null);\n  useEffect(() => {\n    if (!loading) {\n      observer.current = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const lazyImage = entry.target;\n            lazyImage.src = lazyImage.dataset.src;\n            observer.current.unobserve(lazyImage);\n          }\n        });\n      });\n\n      // Start observing each lazy-load image\n      document.querySelectorAll('.lazy-load').forEach(img => {\n        observer.current.observe(img);\n      });\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list-name\",\n      children: [\" \", listDetails.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"list-description\",\n      children: listDetails.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) // Show loading indicator while data is being fetched\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://letterboxd.com${movie.title}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-src\": movie.imageUrl // Lazy load image\n            ,\n            alt: movie.title,\n            className: \"lazy-load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"T7Pz6fNrWjwYZRI+u8G57AnVF/o=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Movies","_s","listDetails","setListDetails","movies","setMovies","loading","setLoading","fetchData","response","get","moviesData","data","error","console","observer","current","IntersectionObserver","entries","forEach","entry","isIntersecting","lazyImage","target","src","dataset","unobserve","document","querySelectorAll","img","observe","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","map","movie","index","href","rel","imageUrl","alt","_c","$RefreshReg$"],"sources":["C:/Users/Horuy/Desktop/js/ryanchiv/src/component/Movies.js"],"sourcesContent":["import React, { useState, useEffect, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport './Movies.css';\r\n\r\nconst Movies = () => {\r\n\r\n    \r\n    const [listDetails, setListDetails] = useState({});\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/movieScraping');\r\n        const { listDetails, moviesData } = response.data;\r\n\r\n        setListDetails(listDetails);\r\n        setMovies(moviesData);\r\n\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }finally {\r\n          setLoading(false); // Update loading status once data fetching is complete\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const observer = useRef(null);\r\n  useEffect(() => {\r\n    if (!loading) {\r\n        observer.current = new IntersectionObserver((entries) => {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    const lazyImage = entry.target;\r\n                    lazyImage.src = lazyImage.dataset.src;\r\n                    observer.current.unobserve(lazyImage);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Start observing each lazy-load image\r\n        document.querySelectorAll('.lazy-load').forEach((img) => {\r\n            observer.current.observe(img);\r\n        });\r\n    }\r\n}, [loading]);\r\n\r\n  return (\r\n    <div className='movies'>\r\n        <h2 className =\"list-name\"> {listDetails.title}</h2>\r\n        <p className =\"list-description\">{listDetails.description}</p>\r\n\r\n        {loading ? (\r\n                <p>Loading...</p> // Show loading indicator while data is being fetched\r\n            ) : (\r\n              <div className=\"movies-container\">\r\n                  {movies.map((movie, index) => (\r\n                      <div key={index} className=\"movie\">\r\n                          <a href={`https://letterboxd.com${movie.title}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                              <img\r\n                                        data-src={movie.imageUrl} // Lazy load image\r\n                                        alt={movie.title}\r\n                                        className=\"lazy-load\"\r\n                                    />\r\n                              </a>\r\n                      </div>\r\n                  ))}\r\n              </div>\r\n            )}\r\n    </div>\r\n);\r\n}\r\n  \r\n  export default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}