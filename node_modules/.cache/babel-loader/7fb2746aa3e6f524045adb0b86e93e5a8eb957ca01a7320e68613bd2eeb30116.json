{"ast":null,"code":"var _jsxFileName = \"/Users/horuy/Desktop/js/site/src/component/Spotify.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientID = '6198fcf6f4eb4eda9e9bca8527177fd4';\nconst clientSecret = '5f3e5221e42d4ca695c2c1be5910747f';\nlet accessToken = ''; // Store the access token globally\n\nasync function getAccessToken() {\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientID}:${clientSecret}`)}`\n    },\n    body: 'grant_type=client_credentials&scope=user-top-read'\n  });\n  const data = await response.json();\n  accessToken = data.access_token; // Update the global access token\n  setTimeout(getAccessToken, 3600000); // Refresh token after one hour (3600000 milliseconds)\n}\nasync function fetchWebApi(endpoint, method, body) {\n  //if (!accessToken) await getAccessToken();\n\n  //console.log(accessToken);\n\n  const res = await fetch(`https://api.spotify.com/${endpoint}`, {\n    headers: {\n      Authorization: `Bearer BQCY78x1w61LdiXUa9RnLwGj3KeAFWQXKJEhqbQO0y1aIBb7iDqAoK_gG1uhbaBXJ1yK39XNbvBelEWfZBnXysPkxxHogSyJrUUo3r8EXd3Ys54rZq8b8wAOdgc`\n    },\n    method,\n    body: JSON.stringify(body)\n  });\n  return await res.json();\n}\nasync function getTopTracks() {\n  try {\n    const response = await fetchWebApi('v1/me/top/tracks?time_range=long_term&limit=5', 'GET');\n    return response.items || []; // Return an empty array if items is undefined\n  } catch (error) {\n    console.error('Error fetching top tracks:', error);\n    return []; // Return an empty array in case of an error\n  }\n}\nexport default function Spotify() {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchAndDisplayTopTracks() {\n      const topTracks = await getTopTracks();\n      setTracks(topTracks);\n      setLoading(false);\n    }\n    fetchAndDisplayTopTracks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top 5 Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs-container\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [track.name, \" by \", track.artists.map(artist => artist.name).join(', ')]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Spotify, \"Sz6ZEYKd1VIdaFUNb3WwrvXH+L8=\");\n_c = Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","clientID","clientSecret","accessToken","getAccessToken","response","fetch","method","headers","btoa","body","data","json","access_token","setTimeout","fetchWebApi","endpoint","res","Authorization","JSON","stringify","getTopTracks","items","error","console","Spotify","_s","tracks","setTracks","loading","setLoading","fetchAndDisplayTopTracks","topTracks","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","track","index","name","artists","artist","join","_c","$RefreshReg$"],"sources":["/Users/horuy/Desktop/js/site/src/component/Spotify.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst clientID = '6198fcf6f4eb4eda9e9bca8527177fd4';\nconst clientSecret = '5f3e5221e42d4ca695c2c1be5910747f';\nlet accessToken = ''; // Store the access token globally\n\nasync function getAccessToken() {\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': `Basic ${btoa(`${clientID}:${clientSecret}`)}`\n    },\n    body: 'grant_type=client_credentials&scope=user-top-read'\n  });\n  const data = await response.json();\n  accessToken = data.access_token; // Update the global access token\n  setTimeout(getAccessToken, 3600000); // Refresh token after one hour (3600000 milliseconds)\n}\n\nasync function fetchWebApi(endpoint, method, body) {\n  //if (!accessToken) await getAccessToken();\n\n  //console.log(accessToken);\n\n  const res = await fetch(`https://api.spotify.com/${endpoint}`, {\n    headers: {\n      Authorization: `Bearer BQCY78x1w61LdiXUa9RnLwGj3KeAFWQXKJEhqbQO0y1aIBb7iDqAoK_gG1uhbaBXJ1yK39XNbvBelEWfZBnXysPkxxHogSyJrUUo3r8EXd3Ys54rZq8b8wAOdgc`,\n    },\n    method,\n    body: JSON.stringify(body)\n  });\n  return await res.json();\n}\n\nasync function getTopTracks() {\n    try {\n      const response = await fetchWebApi(\n        'v1/me/top/tracks?time_range=long_term&limit=5', 'GET'\n      );\n\n      return response.items || []; // Return an empty array if items is undefined\n    } catch (error) {\n      console.error('Error fetching top tracks:', error);\n      return []; // Return an empty array in case of an error\n    }\n  }\n\nexport default function Spotify() {\n  const [tracks, setTracks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchAndDisplayTopTracks() {\n      const topTracks = await getTopTracks();\n      setTracks(topTracks);\n      setLoading(false);\n    \n    }\n\n    fetchAndDisplayTopTracks();\n  }, []);\n\n  return (\n    <div>\n      <h2>Top 5 Tracks</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"songs-container\">\n          {tracks.map((track, index) => (\n            <li key={index}>{track.name} by {track.artists.map(artist => artist.name).join(', ')}</li>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}