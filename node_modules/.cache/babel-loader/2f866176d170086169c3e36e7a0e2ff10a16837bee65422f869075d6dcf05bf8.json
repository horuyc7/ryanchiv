{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Horuy\\\\Desktop\\\\js\\\\ryanchiv\\\\src\\\\component\\\\Manga.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./Manga.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Manga = () => {\n  _s();\n  const [mangaData, setMangaData] = useState({\n    currently: [],\n    completed: []\n  });\n  const [activeSection, setActiveSection] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [currentlyResponse, completedResponse] = await Promise.all([axios.get('/api/mangaCurrentlyScraping'), axios.get('/api/mangaCompletedScraping')]);\n        setMangaData({\n          currently: currentlyResponse.data,\n          completed: completedResponse.data\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSectionClick = section => {\n    setActiveSection(section);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleSectionClick('currently'),\n        className: activeSection === 'currently' ? 'active' : '',\n        children: \"Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleSectionClick('completed'),\n        className: activeSection === 'completed' ? 'active' : '',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manga-container\",\n      children: [activeSection === 'currently' && mangaData.currently.map((manga, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manga\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://myanimelist.net${manga.title}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-src\": manga.imageUrl // Lazy load image\n            ,\n            alt: manga.title,\n            className: \"lazy-load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)), activeSection === 'completed' && mangaData.completed.map((manga, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manga\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://myanimelist.net${manga.title}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-src\": manga.imageUrl // Lazy load image\n            ,\n            alt: manga.title,\n            className: \"lazy-load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '5px',\n            textAlign: 'center'\n          },\n          children: [\" \\u2606 \", manga.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Manga, \"nXAQHnU58YSVWtul+pS0coafe+Y=\");\n_c = Manga;\nexport default Manga;\nvar _c;\n$RefreshReg$(_c, \"Manga\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Manga","_s","mangaData","setMangaData","currently","completed","activeSection","setActiveSection","loading","setLoading","fetchData","currentlyResponse","completedResponse","Promise","all","get","data","error","console","handleSectionClick","section","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","manga","index","href","title","target","rel","imageUrl","alt","style","marginTop","textAlign","rating","_c","$RefreshReg$"],"sources":["C:/Users/Horuy/Desktop/js/ryanchiv/src/component/Manga.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"./Manga.css\";\r\n\r\nconst Manga = () => {\r\n\r\n    \r\n\r\n    const [mangaData, setMangaData] = useState({ currently: [], completed: [] });\r\n    const [activeSection, setActiveSection] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [currentlyResponse, completedResponse] = await Promise.all([\r\n                    axios.get('/api/mangaCurrentlyScraping'),\r\n                    axios.get('/api/mangaCompletedScraping')\r\n                ]);\r\n                setMangaData({ currently: currentlyResponse.data, completed: completedResponse.data });\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n  const handleSectionClick = (section) => {\r\n    setActiveSection(section);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"section-container\">\r\n                <p onClick={() => handleSectionClick('currently')} className={activeSection === 'currently' ? 'active' : ''}>Currently Reading</p>\r\n                <p onClick={() => handleSectionClick('completed')} className={activeSection === 'completed' ? 'active' : ''}>Completed</p>\r\n            </div>\r\n\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <div className=\"manga-container\">\r\n                    {activeSection === 'currently' && mangaData.currently.map((manga, index) => (\r\n                        <div key={index} className=\"manga\">\r\n                            <a href={`https://myanimelist.net${manga.title}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <img\r\n                                                data-src={manga.imageUrl} // Lazy load image\r\n                                                alt={manga.title}\r\n                                                className=\"lazy-load\"\r\n                                            />\r\n                            </a>\r\n                        </div>\r\n                    ))}\r\n                    {activeSection === 'completed' && mangaData.completed.map((manga, index) => (\r\n                        <div key={index} className=\"manga\">\r\n                            <a href={`https://myanimelist.net${manga.title}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <img\r\n                                                data-src={manga.imageUrl} // Lazy load image\r\n                                                alt={manga.title}\r\n                                                className=\"lazy-load\"\r\n                                            />\r\n                            </a>\r\n                            <p style={{ marginTop: '5px', textAlign: 'center' }}> â˜† {manga.rating}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Manga;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}