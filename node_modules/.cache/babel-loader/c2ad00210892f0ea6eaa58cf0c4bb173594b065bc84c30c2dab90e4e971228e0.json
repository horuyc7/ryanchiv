{"ast":null,"code":"var _jsxFileName = \"/Users/horuy/Desktop/js/site/src/component/Manga.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./Manga.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Manga = () => {\n  _s();\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [complete, setComplete] = useState([]);\n  const [activeSection, setActiveSection] = useState('currentlyReading');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const currentlyResponse = await axios.get('http://localhost:8000/scrap/manga/currently');\n        setCurrentlyReading(currentlyResponse.data);\n        const completeResponse = await axios.get('http://localhost:8000/scrap/manga/complete');\n        setComplete(completeResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currently Reading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manga-container\",\n      children: manga.map((manga, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manga\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://myanimelist.net${manga.title}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: manga.imageUrl,\n            alt: manga.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Manga, \"h/y6mPuNtR6mb+EPwYz5d67DCk0=\");\n_c = Manga;\nexport default Manga;\nvar _c;\n$RefreshReg$(_c, \"Manga\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Manga","_s","currentlyReading","setCurrentlyReading","complete","setComplete","activeSection","setActiveSection","fetchData","currentlyResponse","get","data","completeResponse","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","manga","map","index","href","title","target","rel","src","imageUrl","alt","_c","$RefreshReg$"],"sources":["/Users/horuy/Desktop/js/site/src/component/Manga.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./Manga.css\";\n\nconst Manga = () => {\n    const [currentlyReading, setCurrentlyReading] = useState([]);\n    const [complete, setComplete] = useState([]);\n    const [activeSection, setActiveSection] = useState('currentlyReading');\n\n    useEffect(() => {\n        const fetchData = async () => {\n        try {\n            const currentlyResponse = await axios.get('http://localhost:8000/scrap/manga/currently');\n            setCurrentlyReading(currentlyResponse.data);\n            \n            const completeResponse = await axios.get('http://localhost:8000/scrap/manga/complete');\n            setComplete(completeResponse.data);\n\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n        };\n\n    \n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n        <h2>Currently Reading</h2>\n        <div className=\"manga-container\">\n            {manga.map((manga, index) => (\n                <div key={index} className=\"manga\">\n                    <a href={`https://myanimelist.net${manga.title}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img src={manga.imageUrl} alt={manga.title} />\n                        </a>\n                </div>\n            ))}\n        </div>\n    </div>\n);\n}\n  \n  export default Manga;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,kBAAkB,CAAC;EAEtEC,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,iBAAiB,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,6CAA6C,CAAC;QACxFP,mBAAmB,CAACM,iBAAiB,CAACE,IAAI,CAAC;QAE3C,MAAMC,gBAAgB,GAAG,MAAMf,KAAK,CAACa,GAAG,CAAC,4CAA4C,CAAC;QACtFL,WAAW,CAACO,gBAAgB,CAACD,IAAI,CAAC;MAEtC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACA,CAAC;IAILL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA;MAAKqB,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAC3BM,KAAK,CAACC,GAAG,CAAC,CAACD,KAAK,EAAEE,KAAK,kBACpBxB,OAAA;QAAiBqB,SAAS,EAAC,OAAO;QAAAL,QAAA,eAC9BhB,OAAA;UAAGyB,IAAI,EAAG,0BAAyBH,KAAK,CAACI,KAAM,EAAE;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAZ,QAAA,eACnFhB,OAAA;YAAK6B,GAAG,EAAEP,KAAK,CAACQ,QAAS;YAACC,GAAG,EAAET,KAAK,CAACI;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C;MAAC,GAHFI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAtCKD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAwCT,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}